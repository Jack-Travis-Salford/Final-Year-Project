//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Script/Input/IAPlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @IAPlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @IAPlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""IAPlayerControls"",
    ""maps"": [
        {
            ""name"": ""PlayerControls"",
            ""id"": ""818dc42f-e7b6-406f-87ac-ea2d1051c5ac"",
            ""actions"": [
                {
                    ""name"": ""Toggle Menu"",
                    ""type"": ""Button"",
                    ""id"": ""aca1bd7b-8e70-4e6a-a66c-d5829b33d6d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""e149fc3e-066d-401d-b23d-9a27c88d2a79"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Looking"",
                    ""type"": ""Value"",
                    ""id"": ""6aa8e986-4484-4729-9c23-77b20a930c91"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""NoClipToggle"",
                    ""type"": ""Button"",
                    ""id"": ""ece56140-f622-43af-a071-5967f4156e74"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""17cf113c-fa21-43c6-be1a-add7c9aaaf2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WorldSpawnRespawn"",
                    ""type"": ""Button"",
                    ""id"": ""5c3c27a2-35bf-4b84-8228-456d49aad2ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IncreaseSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""7116d03e-b36e-4aba-8adc-85cc4883d804"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DecreaseSpeed"",
                    ""type"": ""Button"",
                    ""id"": ""2dcc3313-c46b-4499-8f6a-33abc7e66575"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IncreaseSensitivity"",
                    ""type"": ""Button"",
                    ""id"": ""61531f09-3bc1-48e9-9af8-334ff932a684"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DecreaseSensitivity"",
                    ""type"": ""Button"",
                    ""id"": ""1d884e99-f7d4-4311-9bf9-514397dcae59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CursorToggle"",
                    ""type"": ""Button"",
                    ""id"": ""a8b6f03f-105e-46e8-a72a-bd35caadca6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""fc7b68d3-37b6-4067-9d48-3a28f00e042f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""654cbd1a-8cbd-49d6-95f4-ab9e88e286c3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Toggle Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4bc9b8fb-cd76-49f3-8b4c-ffed84ae2937"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Toggle Menu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""fddf2f2a-d8e9-4a49-b2b7-1bfb7d6b6631"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""75bed29f-69cd-4c33-9ae8-660b9e702a80"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""af53e9c8-6695-4a2b-a925-9692316c2e61"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""4b7ff792-805c-45b5-94ec-5ee28af039a6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""25599591-a025-411a-9afe-bf94d285fa69"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""a5c04add-cd7f-418e-bd1a-6551ffe67df7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""e1fcca0a-462a-4007-b899-3a4b8ebbbf3a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller"",
                    ""id"": ""751fc74e-471e-48a8-8819-1f699ca389d4"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""dcfbaa89-ba17-4db0-849f-1540830b17f2"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""c6dee8a0-9dd4-4d70-bc14-c7f90bcf44e1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""4e6cdb6b-dc44-4e0f-b749-af005ff25c77"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""018084a6-d0e2-4d6e-a28f-99249b3f6ea7"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""bbdedd4b-9d3f-4da4-9ce5-c308d7e0f275"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""87e3e15c-04c1-47a4-91f6-71cf78500321"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b39c0ac2-8eba-4c74-b7c4-75b52e46431f"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0572f472-7b10-4b93-9c28-13f41c6f51de"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Looking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc82067c-05bb-4fed-bdd1-284525c5ebeb"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NoClipToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f022cd42-62ee-4154-a812-7d06dff3a926"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""NoClipToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45ad0910-451b-4eb4-8164-6dda6b68e624"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8478ebeb-2d9c-43e9-97f7-8ee2f23b8074"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b6bfb68-a649-47dc-b885-5aea7d71b2e2"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WorldSpawnRespawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e32dab9-e862-48b9-9080-7b812e4fca62"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""WorldSpawnRespawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5f2926f-dcbe-4ab6-9fa3-89f2cfc0e26b"",
                    ""path"": ""<Keyboard>/numpadPlus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""IncreaseSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c253af75-7c27-4943-a505-5ac7b90498e0"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IncreaseSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d0ebfd2-afaa-46a6-bde7-aa95e41ef64c"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DecreaseSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4261a4c2-85ab-4931-ad4c-2285cdfd5329"",
                    ""path"": ""<Keyboard>/numpadMinus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DecreaseSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9c3f337-045b-4a33-afe9-2bcf8edacb31"",
                    ""path"": ""<Keyboard>/period"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""IncreaseSensitivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3897bec6-2e63-476c-b4ed-e685ad1b2d90"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DecreaseSensitivity"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d72ae419-9b4a-436f-9ca0-3d8dec986c9b"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CursorToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2c1ef07-a3db-4ca9-8671-aaaa8438a90c"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerControls
        m_PlayerControls = asset.FindActionMap("PlayerControls", throwIfNotFound: true);
        m_PlayerControls_ToggleMenu = m_PlayerControls.FindAction("Toggle Menu", throwIfNotFound: true);
        m_PlayerControls_Movement = m_PlayerControls.FindAction("Movement", throwIfNotFound: true);
        m_PlayerControls_Looking = m_PlayerControls.FindAction("Looking", throwIfNotFound: true);
        m_PlayerControls_NoClipToggle = m_PlayerControls.FindAction("NoClipToggle", throwIfNotFound: true);
        m_PlayerControls_Respawn = m_PlayerControls.FindAction("Respawn", throwIfNotFound: true);
        m_PlayerControls_WorldSpawnRespawn = m_PlayerControls.FindAction("WorldSpawnRespawn", throwIfNotFound: true);
        m_PlayerControls_IncreaseSpeed = m_PlayerControls.FindAction("IncreaseSpeed", throwIfNotFound: true);
        m_PlayerControls_DecreaseSpeed = m_PlayerControls.FindAction("DecreaseSpeed", throwIfNotFound: true);
        m_PlayerControls_IncreaseSensitivity = m_PlayerControls.FindAction("IncreaseSensitivity", throwIfNotFound: true);
        m_PlayerControls_DecreaseSensitivity = m_PlayerControls.FindAction("DecreaseSensitivity", throwIfNotFound: true);
        m_PlayerControls_CursorToggle = m_PlayerControls.FindAction("CursorToggle", throwIfNotFound: true);
        m_PlayerControls_Run = m_PlayerControls.FindAction("Run", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControls
    private readonly InputActionMap m_PlayerControls;
    private IPlayerControlsActions m_PlayerControlsActionsCallbackInterface;
    private readonly InputAction m_PlayerControls_ToggleMenu;
    private readonly InputAction m_PlayerControls_Movement;
    private readonly InputAction m_PlayerControls_Looking;
    private readonly InputAction m_PlayerControls_NoClipToggle;
    private readonly InputAction m_PlayerControls_Respawn;
    private readonly InputAction m_PlayerControls_WorldSpawnRespawn;
    private readonly InputAction m_PlayerControls_IncreaseSpeed;
    private readonly InputAction m_PlayerControls_DecreaseSpeed;
    private readonly InputAction m_PlayerControls_IncreaseSensitivity;
    private readonly InputAction m_PlayerControls_DecreaseSensitivity;
    private readonly InputAction m_PlayerControls_CursorToggle;
    private readonly InputAction m_PlayerControls_Run;
    public struct PlayerControlsActions
    {
        private @IAPlayerControls m_Wrapper;
        public PlayerControlsActions(@IAPlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleMenu => m_Wrapper.m_PlayerControls_ToggleMenu;
        public InputAction @Movement => m_Wrapper.m_PlayerControls_Movement;
        public InputAction @Looking => m_Wrapper.m_PlayerControls_Looking;
        public InputAction @NoClipToggle => m_Wrapper.m_PlayerControls_NoClipToggle;
        public InputAction @Respawn => m_Wrapper.m_PlayerControls_Respawn;
        public InputAction @WorldSpawnRespawn => m_Wrapper.m_PlayerControls_WorldSpawnRespawn;
        public InputAction @IncreaseSpeed => m_Wrapper.m_PlayerControls_IncreaseSpeed;
        public InputAction @DecreaseSpeed => m_Wrapper.m_PlayerControls_DecreaseSpeed;
        public InputAction @IncreaseSensitivity => m_Wrapper.m_PlayerControls_IncreaseSensitivity;
        public InputAction @DecreaseSensitivity => m_Wrapper.m_PlayerControls_DecreaseSensitivity;
        public InputAction @CursorToggle => m_Wrapper.m_PlayerControls_CursorToggle;
        public InputAction @Run => m_Wrapper.m_PlayerControls_Run;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlsActions instance)
        {
            if (m_Wrapper.m_PlayerControlsActionsCallbackInterface != null)
            {
                @ToggleMenu.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnToggleMenu;
                @ToggleMenu.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnToggleMenu;
                @ToggleMenu.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnToggleMenu;
                @Movement.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnMovement;
                @Looking.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnLooking;
                @Looking.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnLooking;
                @Looking.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnLooking;
                @NoClipToggle.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnNoClipToggle;
                @NoClipToggle.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnNoClipToggle;
                @NoClipToggle.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnNoClipToggle;
                @Respawn.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRespawn;
                @Respawn.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRespawn;
                @Respawn.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRespawn;
                @WorldSpawnRespawn.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnWorldSpawnRespawn;
                @WorldSpawnRespawn.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnWorldSpawnRespawn;
                @WorldSpawnRespawn.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnWorldSpawnRespawn;
                @IncreaseSpeed.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnIncreaseSpeed;
                @IncreaseSpeed.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnIncreaseSpeed;
                @IncreaseSpeed.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnIncreaseSpeed;
                @DecreaseSpeed.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDecreaseSpeed;
                @DecreaseSpeed.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDecreaseSpeed;
                @DecreaseSpeed.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDecreaseSpeed;
                @IncreaseSensitivity.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnIncreaseSensitivity;
                @IncreaseSensitivity.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnIncreaseSensitivity;
                @IncreaseSensitivity.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnIncreaseSensitivity;
                @DecreaseSensitivity.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDecreaseSensitivity;
                @DecreaseSensitivity.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDecreaseSensitivity;
                @DecreaseSensitivity.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnDecreaseSensitivity;
                @CursorToggle.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnCursorToggle;
                @CursorToggle.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnCursorToggle;
                @CursorToggle.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnCursorToggle;
                @Run.started -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PlayerControlsActionsCallbackInterface.OnRun;
            }
            m_Wrapper.m_PlayerControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleMenu.started += instance.OnToggleMenu;
                @ToggleMenu.performed += instance.OnToggleMenu;
                @ToggleMenu.canceled += instance.OnToggleMenu;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Looking.started += instance.OnLooking;
                @Looking.performed += instance.OnLooking;
                @Looking.canceled += instance.OnLooking;
                @NoClipToggle.started += instance.OnNoClipToggle;
                @NoClipToggle.performed += instance.OnNoClipToggle;
                @NoClipToggle.canceled += instance.OnNoClipToggle;
                @Respawn.started += instance.OnRespawn;
                @Respawn.performed += instance.OnRespawn;
                @Respawn.canceled += instance.OnRespawn;
                @WorldSpawnRespawn.started += instance.OnWorldSpawnRespawn;
                @WorldSpawnRespawn.performed += instance.OnWorldSpawnRespawn;
                @WorldSpawnRespawn.canceled += instance.OnWorldSpawnRespawn;
                @IncreaseSpeed.started += instance.OnIncreaseSpeed;
                @IncreaseSpeed.performed += instance.OnIncreaseSpeed;
                @IncreaseSpeed.canceled += instance.OnIncreaseSpeed;
                @DecreaseSpeed.started += instance.OnDecreaseSpeed;
                @DecreaseSpeed.performed += instance.OnDecreaseSpeed;
                @DecreaseSpeed.canceled += instance.OnDecreaseSpeed;
                @IncreaseSensitivity.started += instance.OnIncreaseSensitivity;
                @IncreaseSensitivity.performed += instance.OnIncreaseSensitivity;
                @IncreaseSensitivity.canceled += instance.OnIncreaseSensitivity;
                @DecreaseSensitivity.started += instance.OnDecreaseSensitivity;
                @DecreaseSensitivity.performed += instance.OnDecreaseSensitivity;
                @DecreaseSensitivity.canceled += instance.OnDecreaseSensitivity;
                @CursorToggle.started += instance.OnCursorToggle;
                @CursorToggle.performed += instance.OnCursorToggle;
                @CursorToggle.canceled += instance.OnCursorToggle;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
            }
        }
    }
    public PlayerControlsActions @PlayerControls => new PlayerControlsActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IPlayerControlsActions
    {
        void OnToggleMenu(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnLooking(InputAction.CallbackContext context);
        void OnNoClipToggle(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
        void OnWorldSpawnRespawn(InputAction.CallbackContext context);
        void OnIncreaseSpeed(InputAction.CallbackContext context);
        void OnDecreaseSpeed(InputAction.CallbackContext context);
        void OnIncreaseSensitivity(InputAction.CallbackContext context);
        void OnDecreaseSensitivity(InputAction.CallbackContext context);
        void OnCursorToggle(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
    }
}
